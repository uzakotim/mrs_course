<launch>

  <!-- args corresponding to environment variables -->
  <arg name="UAV_NAME" default="$(optenv UAV_NAME uav1)" />

  <arg name="custom_config" default="" />

    <!-- other args -->
  <arg name="standalone" default="true" />
  <arg name="debug" default="false" />

  <arg     if="$(eval arg('standalone') or arg('debug'))" name="nodelet" value="standalone" />
  <arg unless="$(eval arg('standalone') or arg('debug'))" name="nodelet" value="load" />
  <arg     if="$(eval arg('standalone') or arg('debug'))" name="nodelet_manager" value="" />
  <arg unless="$(eval arg('standalone') or arg('debug'))" name="nodelet_manager" value="$(arg UAV_NAME)_nodelet_manager" />

  <arg     if="$(arg debug)" name="launch_prefix" value="debug_roslaunch" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />

  <arg name="file" default="" />

  <group ns="$(arg UAV_NAME)">

    <node name="controller_test" pkg="nodelet" type="nodelet" args="$(arg nodelet) task_01_evaluation/ControllerTest $(arg nodelet_manager)" output="screen" launch-prefix="$(arg launch_prefix)">

      <rosparam file="$(find task_01_evaluation)/config/controller_test.yaml" />

      <param name="file" value="$(arg file) "/>

        <!-- subscribers -->
      <remap from="~control_manager_diagnostics_in" to="control_manager/diagnostics" />
      <remap from="~position_cmd_in" to="control_manager/position_cmd" />
      <remap from="~uav_state_in" to="odometry/uav_state" />

        <!-- services -->
      <remap from="~start_in" to="~start" />
      <remap from="~path_out" to="trajectory_generation/path" />

    </node>

  </group>

</launch>
